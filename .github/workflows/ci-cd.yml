name: Sulasang CI/CD with Gradle, Github Actions, Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  JASYPT_ENCRYPTOR_PASSWORD: ${{ secrets.JASYPT_ENCRYPTOR_PASSWORD }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper

      - name: QEMU 설치
        uses: docker/setup-qemu-action@v2

      - name: 도커 설치
        uses: docker/setup-buildx-action@v2

      - name: JDK 17 설치
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: adopt

      - name: 빌드 권한 부여
        run: chmod +x ./gradlew
        shell: bash

      - name: 프로젝트 빌드
        run: ./gradlew clean build
        shell: bash

      - name: DockerHub 로그인
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: user/app:latest

      - name: Docker 이미지 빌드
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }} -f docker/Dockerfile .

      - name: Docker Hub 푸쉬
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }}

      - name: EC2 인스턴스 접속 및 애플리케이션 실행
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}

          script: |
            sudo docker kill ${{ secrets.PROJECT_NAME }}
            sudo docker rm -f ${{ secrets.PROJECT_NAME }}
            sudo docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }}
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }}
            
            sudo docker run -p ${{ secrets.PORT }}:${{ secrets.PORT }} \
            --name ${{ secrets.PROJECT_NAME }} \
            -e SPRING_DATASOURCE_URL=${{ secrets.DB_URL }} \
            -e SPRING_DATASOURCE_USERNAME=${{ secrets.DB_USERNAME }} \
            -e SPRING_DATASOURCE_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -d ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }}